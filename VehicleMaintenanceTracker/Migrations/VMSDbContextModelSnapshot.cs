// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleMaintenanceTracker.Context;

#nullable disable

namespace VehicleMaintenanceTracker.Migrations
{
    [DbContext(typeof(VMSDbContext))]
    partial class VMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.MaintenanceRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("AdminNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OdometerReadingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("OdometerReadingId")
                        .IsUnique();

                    b.HasIndex("VehicleId");

                    b.ToTable("MaintenanceRequests");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.MaintenanceRequestService", b =>
                {
                    b.Property<int>("RequestServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestServiceId"));

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("RequestServiceId");

                    b.HasIndex("RequestId");

                    b.HasIndex("ServiceId");

                    b.ToTable("MaintenanceRequestServices");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.MaintenanceService", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int>("MaximumOdometer")
                        .HasColumnType("int");

                    b.Property<int>("MinimumOdometer")
                        .HasColumnType("int");

                    b.Property<decimal>("ServiceCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId");

                    b.ToTable("MaintenanceServices");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.OdometerReading", b =>
                {
                    b.Property<int>("ReadingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadingId"));

                    b.Property<int>("Reading")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("ReadingId");

                    b.HasIndex("VehicleId");

                    b.ToTable("OdometerReadings");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("LicensePlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.MaintenanceRequest", b =>
                {
                    b.HasOne("VehicleMaintenanceTracker.Modules.OdometerReading", "OdometerReading")
                        .WithOne("MaintenanceRequest")
                        .HasForeignKey("VehicleMaintenanceTracker.Modules.MaintenanceRequest", "OdometerReadingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VehicleMaintenanceTracker.Modules.Vehicle", "Vehicle")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OdometerReading");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.MaintenanceRequestService", b =>
                {
                    b.HasOne("VehicleMaintenanceTracker.Modules.MaintenanceRequest", "MaintenanceRequest")
                        .WithMany("MaintenanceRequestServices")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleMaintenanceTracker.Modules.MaintenanceService", "MaintenanceService")
                        .WithMany("MaintenanceRequestServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaintenanceRequest");

                    b.Navigation("MaintenanceService");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.OdometerReading", b =>
                {
                    b.HasOne("VehicleMaintenanceTracker.Modules.Vehicle", "Vehicle")
                        .WithMany("OdometerReadings")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.Vehicle", b =>
                {
                    b.HasOne("VehicleMaintenanceTracker.Modules.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.MaintenanceRequest", b =>
                {
                    b.Navigation("MaintenanceRequestServices");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.MaintenanceService", b =>
                {
                    b.Navigation("MaintenanceRequestServices");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.OdometerReading", b =>
                {
                    b.Navigation("MaintenanceRequest")
                        .IsRequired();
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.User", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleMaintenanceTracker.Modules.Vehicle", b =>
                {
                    b.Navigation("MaintenanceRequests");

                    b.Navigation("OdometerReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
